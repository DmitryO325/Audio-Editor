# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Проект GUI/Designer файлы/Main Window.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_audio_editor(object):
    def setupUi(self, audio_editor):
        audio_editor.setObjectName("audio_editor")
        audio_editor.resize(800, 600)
        audio_editor.setMinimumSize(QtCore.QSize(800, 600))
        audio_editor.setMaximumSize(QtCore.QSize(800, 600))
        self.main_widget = QtWidgets.QWidget(audio_editor)
        self.main_widget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.main_widget.setObjectName("main_widget")
        self.panel_of_control_buttons = QtWidgets.QGroupBox(self.main_widget)
        self.panel_of_control_buttons.setGeometry(QtCore.QRect(10, 490, 781, 81))
        self.panel_of_control_buttons.setStyleSheet("background-color: rgb(109, 130, 161);")
        self.panel_of_control_buttons.setObjectName("panel_of_control_buttons")
        self.controls = QtWidgets.QHBoxLayout(self.panel_of_control_buttons)
        self.controls.setObjectName("controls")
        self.play_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.play_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.play_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.play_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.play_btn.setText("")
        self.play_btn.setObjectName("play_btn")
        self.controls.addWidget(self.play_btn)
        self.pause_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.pause_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.pause_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.pause_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.pause_btn.setText("")
        self.pause_btn.setObjectName("pause_btn")
        self.controls.addWidget(self.pause_btn)
        self.stop_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.stop_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.stop_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.stop_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.stop_btn.setText("")
        self.stop_btn.setObjectName("stop_btn")
        self.controls.addWidget(self.stop_btn)
        self.rewind_back_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.rewind_back_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.rewind_back_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.rewind_back_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.rewind_back_btn.setText("")
        self.rewind_back_btn.setObjectName("rewind_back_btn")
        self.controls.addWidget(self.rewind_back_btn)
        self.rewind_forward_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.rewind_forward_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.rewind_forward_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.rewind_forward_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.rewind_forward_btn.setText("")
        self.rewind_forward_btn.setObjectName("rewind_forward_btn")
        self.controls.addWidget(self.rewind_forward_btn)
        self.repeat_comp_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.repeat_comp_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.repeat_comp_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.repeat_comp_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.repeat_comp_btn.setText("")
        self.repeat_comp_btn.setObjectName("repeat_comp_btn")
        self.controls.addWidget(self.repeat_comp_btn)
        self.prev_comp_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.prev_comp_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.prev_comp_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.prev_comp_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.prev_comp_btn.setText("")
        self.prev_comp_btn.setObjectName("prev_comp_btn")
        self.controls.addWidget(self.prev_comp_btn)
        self.next_comp_btn = QtWidgets.QPushButton(self.panel_of_control_buttons)
        self.next_comp_btn.setMinimumSize(QtCore.QSize(64, 64))
        self.next_comp_btn.setMaximumSize(QtCore.QSize(64, 64))
        self.next_comp_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.next_comp_btn.setText("")
        self.next_comp_btn.setObjectName("next_comp_btn")
        self.controls.addWidget(self.next_comp_btn)
        self.volume_slider = QtWidgets.QSlider(self.panel_of_control_buttons)
        self.volume_slider.setStyleSheet("QSlider::handle\n"
"{\n"
"    background-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QSlider::handle:active\n"
"{\n"
"    background-color: rgb(255, 0, 0)\n"
"}\n"
"")
        self.volume_slider.setMaximum(200)
        self.volume_slider.setSingleStep(10)
        self.volume_slider.setProperty("value", 100)
        self.volume_slider.setOrientation(QtCore.Qt.Vertical)
        self.volume_slider.setObjectName("volume_slider")
        self.controls.addWidget(self.volume_slider)
        self.volume_value = QtWidgets.QLabel(self.panel_of_control_buttons)
        self.volume_value.setMaximumSize(QtCore.QSize(30, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.volume_value.setFont(font)
        self.volume_value.setAlignment(QtCore.Qt.AlignCenter)
        self.volume_value.setObjectName("volume_value")
        self.controls.addWidget(self.volume_value)
        self.audio_slider = QtWidgets.QSlider(self.main_widget)
        self.audio_slider.setGeometry(QtCore.QRect(10, 460, 781, 22))
        self.audio_slider.setStyleSheet("QSlider::handle\n"
"{\n"
"    background-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QSlider::handle:active\n"
"{\n"
"    background-color: rgb(0, 7, 157)\n"
"}\n"
"\n"
"")
        self.audio_slider.setMaximum(100000)
        self.audio_slider.setSingleStep(1)
        self.audio_slider.setPageStep(100)
        self.audio_slider.setOrientation(QtCore.Qt.Horizontal)
        self.audio_slider.setObjectName("audio_slider")
        self.audio_time_now = QtWidgets.QTimeEdit(self.main_widget)
        self.audio_time_now.setGeometry(QtCore.QRect(10, 420, 90, 30))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.audio_time_now.setFont(font)
        self.audio_time_now.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.audio_time_now.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.audio_time_now.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.audio_time_now.setReadOnly(True)
        self.audio_time_now.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.audio_time_now.setAccelerated(False)
        self.audio_time_now.setCorrectionMode(QtWidgets.QAbstractSpinBox.CorrectToPreviousValue)
        self.audio_time_now.setKeyboardTracking(True)
        self.audio_time_now.setProperty("showGroupSeparator", False)
        self.audio_time_now.setTime(QtCore.QTime(0, 0, 0))
        self.audio_time_now.setObjectName("audio_time_now")
        self.audio_title = QtWidgets.QLabel(self.main_widget)
        self.audio_title.setGeometry(QtCore.QRect(220, 420, 531, 30))
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(True)
        font.setWeight(50)
        self.audio_title.setFont(font)
        self.audio_title.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.audio_title.setObjectName("audio_title")
        self.audio_time_total = QtWidgets.QTimeEdit(self.main_widget)
        self.audio_time_total.setGeometry(QtCore.QRect(115, 420, 90, 30))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.audio_time_total.setFont(font)
        self.audio_time_total.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.audio_time_total.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.audio_time_total.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.audio_time_total.setReadOnly(True)
        self.audio_time_total.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.audio_time_total.setAccelerated(False)
        self.audio_time_total.setCorrectionMode(QtWidgets.QAbstractSpinBox.CorrectToPreviousValue)
        self.audio_time_total.setKeyboardTracking(True)
        self.audio_time_total.setProperty("showGroupSeparator", False)
        self.audio_time_total.setTime(QtCore.QTime(0, 0, 0))
        self.audio_time_total.setObjectName("audio_time_total")
        self.slash = QtWidgets.QLabel(self.main_widget)
        self.slash.setGeometry(QtCore.QRect(102, 411, 12, 41))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.slash.setFont(font)
        self.slash.setObjectName("slash")
        self.playlist = QtWidgets.QTableWidget(self.main_widget)
        self.playlist.setGeometry(QtCore.QRect(10, 10, 781, 341))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.playlist.setFont(font)
        self.playlist.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"selection-background-color: rgb(62, 210, 255);\n"
"selection-color: rgb(0, 0, 0)\n"
"\n"
"")
        self.playlist.setObjectName("playlist")
        self.playlist.setColumnCount(3)
        self.playlist.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.playlist.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.playlist.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.playlist.setHorizontalHeaderItem(2, item)
        self.add_delete_clear_buttons = QtWidgets.QWidget(self.main_widget)
        self.add_delete_clear_buttons.setGeometry(QtCore.QRect(600, 360, 185, 61))
        self.add_delete_clear_buttons.setObjectName("add_delete_clear_buttons")
        self.current_playlist_buttons = QtWidgets.QHBoxLayout(self.add_delete_clear_buttons)
        self.current_playlist_buttons.setContentsMargins(0, 0, 0, 0)
        self.current_playlist_buttons.setObjectName("current_playlist_buttons")
        self.add_file_btn = QtWidgets.QPushButton(self.add_delete_clear_buttons)
        self.add_file_btn.setMinimumSize(QtCore.QSize(48, 48))
        self.add_file_btn.setMaximumSize(QtCore.QSize(48, 48))
        self.add_file_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.add_file_btn.setText("")
        self.add_file_btn.setObjectName("add_file_btn")
        self.current_playlist_buttons.addWidget(self.add_file_btn)
        self.delete_file_btn = QtWidgets.QPushButton(self.add_delete_clear_buttons)
        self.delete_file_btn.setMinimumSize(QtCore.QSize(48, 48))
        self.delete_file_btn.setMaximumSize(QtCore.QSize(48, 48))
        self.delete_file_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.delete_file_btn.setText("")
        self.delete_file_btn.setObjectName("delete_file_btn")
        self.current_playlist_buttons.addWidget(self.delete_file_btn)
        self.clear_playlist_btn = QtWidgets.QPushButton(self.add_delete_clear_buttons)
        self.clear_playlist_btn.setMinimumSize(QtCore.QSize(48, 48))
        self.clear_playlist_btn.setMaximumSize(QtCore.QSize(48, 48))
        self.clear_playlist_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.clear_playlist_btn.setText("")
        self.clear_playlist_btn.setObjectName("clear_playlist_btn")
        self.current_playlist_buttons.addWidget(self.clear_playlist_btn)
        self.open_save_buttons = QtWidgets.QWidget(self.main_widget)
        self.open_save_buttons.setGeometry(QtCore.QRect(420, 360, 121, 61))
        self.open_save_buttons.setObjectName("open_save_buttons")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.open_save_buttons)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.open_playlist_btn = QtWidgets.QPushButton(self.open_save_buttons)
        self.open_playlist_btn.setMinimumSize(QtCore.QSize(48, 48))
        self.open_playlist_btn.setMaximumSize(QtCore.QSize(48, 48))
        self.open_playlist_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.open_playlist_btn.setText("")
        self.open_playlist_btn.setObjectName("open_playlist_btn")
        self.horizontalLayout.addWidget(self.open_playlist_btn)
        self.save_playlist_btn = QtWidgets.QPushButton(self.open_save_buttons)
        self.save_playlist_btn.setMinimumSize(QtCore.QSize(48, 48))
        self.save_playlist_btn.setMaximumSize(QtCore.QSize(48, 48))
        self.save_playlist_btn.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.save_playlist_btn.setText("")
        self.save_playlist_btn.setObjectName("save_playlist_btn")
        self.horizontalLayout.addWidget(self.save_playlist_btn)
        audio_editor.setCentralWidget(self.main_widget)
        self.menu_bar = QtWidgets.QMenuBar(audio_editor)
        self.menu_bar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menu_bar.setStyleSheet("background-color: rgb(230, 230, 230);\n"
"\n"
"QMenuBar::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"};\n"
"\n"
"QMenuBar::item::pressed\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}")
        self.menu_bar.setObjectName("menu_bar")
        self.file_menu = QtWidgets.QMenu(self.menu_bar)
        self.file_menu.setStyleSheet("QMenu::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}\n"
"")
        self.file_menu.setObjectName("file_menu")
        self.playback_menu = QtWidgets.QMenu(self.menu_bar)
        self.playback_menu.setStyleSheet("QMenu::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}\n"
"")
        self.playback_menu.setObjectName("playback_menu")
        self.speed_menu = QtWidgets.QMenu(self.playback_menu)
        self.speed_menu.setObjectName("speed_menu")
        self.audio_menu = QtWidgets.QMenu(self.menu_bar)
        self.audio_menu.setStyleSheet("QMenu::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}\n"
"")
        self.audio_menu.setObjectName("audio_menu")
        self.settings_menu = QtWidgets.QMenu(self.menu_bar)
        self.settings_menu.setStyleSheet("QMenu::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}\n"
"")
        self.settings_menu.setObjectName("settings_menu")
        self.editor_menu = QtWidgets.QMenu(self.menu_bar)
        self.editor_menu.setStyleSheet("QMenu::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}\n"
"")
        self.editor_menu.setObjectName("editor_menu")
        self.playlist_menu = QtWidgets.QMenu(self.menu_bar)
        self.playlist_menu.setStyleSheet("QMenu::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}\n"
"")
        self.playlist_menu.setObjectName("playlist_menu")
        audio_editor.setMenuBar(self.menu_bar)
        self.open_file_mn = QtWidgets.QAction(audio_editor)
        self.open_file_mn.setObjectName("open_file_mn")
        self.open_folder_mn = QtWidgets.QAction(audio_editor)
        self.open_folder_mn.setObjectName("open_folder_mn")
        self.rewind_forward_mn = QtWidgets.QAction(audio_editor)
        self.rewind_forward_mn.setObjectName("rewind_forward_mn")
        self.rewind_back_mn = QtWidgets.QAction(audio_editor)
        self.rewind_back_mn.setObjectName("rewind_back_mn")
        self.speed_0_25 = QtWidgets.QAction(audio_editor)
        self.speed_0_25.setObjectName("speed_0_25")
        self.speed_0_5 = QtWidgets.QAction(audio_editor)
        self.speed_0_5.setObjectName("speed_0_5")
        self.speed_0_75 = QtWidgets.QAction(audio_editor)
        self.speed_0_75.setObjectName("speed_0_75")
        self.speed_1 = QtWidgets.QAction(audio_editor)
        self.speed_1.setObjectName("speed_1")
        self.speed_1_25 = QtWidgets.QAction(audio_editor)
        self.speed_1_25.setObjectName("speed_1_25")
        self.speed_1_5 = QtWidgets.QAction(audio_editor)
        self.speed_1_5.setObjectName("speed_1_5")
        self.speed_1_75 = QtWidgets.QAction(audio_editor)
        self.speed_1_75.setObjectName("speed_1_75")
        self.speed_2 = QtWidgets.QAction(audio_editor)
        self.speed_2.setObjectName("speed_2")
        self.specified_time_mn = QtWidgets.QAction(audio_editor)
        self.specified_time_mn.setObjectName("specified_time_mn")
        self.pause_mn = QtWidgets.QAction(audio_editor)
        self.pause_mn.setObjectName("pause_mn")
        self.play_mn = QtWidgets.QAction(audio_editor)
        self.play_mn.setObjectName("play_mn")
        self.stop_mn = QtWidgets.QAction(audio_editor)
        self.stop_mn.setObjectName("stop_mn")
        self.previous_composition_mn = QtWidgets.QAction(audio_editor)
        self.previous_composition_mn.setObjectName("previous_composition_mn")
        self.next_composition_mn = QtWidgets.QAction(audio_editor)
        self.next_composition_mn.setObjectName("next_composition_mn")
        self.volume_minus_mn = QtWidgets.QAction(audio_editor)
        self.volume_minus_mn.setObjectName("volume_minus_mn")
        self.volume_plus_mn = QtWidgets.QAction(audio_editor)
        self.volume_plus_mn.setObjectName("volume_plus_mn")
        self.volume_off_mn = QtWidgets.QAction(audio_editor)
        self.volume_off_mn.setObjectName("volume_off_mn")
        self.action_9 = QtWidgets.QAction(audio_editor)
        self.action_9.setObjectName("action_9")
        self.language_options_mn = QtWidgets.QAction(audio_editor)
        self.language_options_mn.setObjectName("language_options_mn")
        self.open_editor_window_mn = QtWidgets.QAction(audio_editor)
        self.open_editor_window_mn.setObjectName("open_editor_window_mn")
        self.repeat_composition_mn = QtWidgets.QAction(audio_editor)
        self.repeat_composition_mn.setObjectName("repeat_composition_mn")
        self.add_file_mn = QtWidgets.QAction(audio_editor)
        self.add_file_mn.setObjectName("add_file_mn")
        self.delete_file_mn = QtWidgets.QAction(audio_editor)
        self.delete_file_mn.setObjectName("delete_file_mn")
        self.clear_playlist_mn = QtWidgets.QAction(audio_editor)
        self.clear_playlist_mn.setObjectName("clear_playlist_mn")
        self.save_playlist_mn = QtWidgets.QAction(audio_editor)
        self.save_playlist_mn.setObjectName("save_playlist_mn")
        self.open_playlist_mn = QtWidgets.QAction(audio_editor)
        self.open_playlist_mn.setObjectName("open_playlist_mn")
        self.file_menu.addAction(self.open_file_mn)
        self.file_menu.addAction(self.open_folder_mn)
        self.file_menu.addSeparator()
        self.speed_menu.addAction(self.speed_0_25)
        self.speed_menu.addAction(self.speed_0_5)
        self.speed_menu.addAction(self.speed_0_75)
        self.speed_menu.addAction(self.speed_1)
        self.speed_menu.addAction(self.speed_1_25)
        self.speed_menu.addAction(self.speed_1_5)
        self.speed_menu.addAction(self.speed_1_75)
        self.speed_menu.addAction(self.speed_2)
        self.playback_menu.addAction(self.speed_menu.menuAction())
        self.playback_menu.addSeparator()
        self.playback_menu.addAction(self.rewind_back_mn)
        self.playback_menu.addAction(self.rewind_forward_mn)
        self.playback_menu.addSeparator()
        self.playback_menu.addAction(self.play_mn)
        self.playback_menu.addAction(self.pause_mn)
        self.playback_menu.addAction(self.stop_mn)
        self.playback_menu.addSeparator()
        self.playback_menu.addAction(self.repeat_composition_mn)
        self.playback_menu.addSeparator()
        self.playback_menu.addAction(self.previous_composition_mn)
        self.playback_menu.addAction(self.next_composition_mn)
        self.audio_menu.addAction(self.volume_minus_mn)
        self.audio_menu.addAction(self.volume_plus_mn)
        self.audio_menu.addSeparator()
        self.audio_menu.addAction(self.volume_off_mn)
        self.settings_menu.addAction(self.language_options_mn)
        self.editor_menu.addAction(self.open_editor_window_mn)
        self.playlist_menu.addAction(self.open_playlist_mn)
        self.playlist_menu.addSeparator()
        self.playlist_menu.addAction(self.add_file_mn)
        self.playlist_menu.addAction(self.delete_file_mn)
        self.playlist_menu.addSeparator()
        self.playlist_menu.addAction(self.clear_playlist_mn)
        self.playlist_menu.addSeparator()
        self.playlist_menu.addAction(self.save_playlist_mn)
        self.menu_bar.addAction(self.file_menu.menuAction())
        self.menu_bar.addAction(self.playlist_menu.menuAction())
        self.menu_bar.addAction(self.playback_menu.menuAction())
        self.menu_bar.addAction(self.audio_menu.menuAction())
        self.menu_bar.addAction(self.settings_menu.menuAction())
        self.menu_bar.addAction(self.editor_menu.menuAction())

        self.retranslateUi(audio_editor)
        QtCore.QMetaObject.connectSlotsByName(audio_editor)

    def retranslateUi(self, audio_editor):
        _translate = QtCore.QCoreApplication.translate
        audio_editor.setWindowTitle(_translate("audio_editor", "Аудиоредактор от DmitryO325"))
        self.volume_value.setText(_translate("audio_editor", "100"))
        self.audio_time_now.setDisplayFormat(_translate("audio_editor", "m:ss"))
        self.audio_title.setText(_translate("audio_editor", "Выберите аудиофайл"))
        self.audio_time_total.setDisplayFormat(_translate("audio_editor", "m:ss"))
        self.slash.setText(_translate("audio_editor", "/"))
        item = self.playlist.horizontalHeaderItem(0)
        item.setText(_translate("audio_editor", "Название"))
        item = self.playlist.horizontalHeaderItem(1)
        item.setText(_translate("audio_editor", "Формат"))
        item = self.playlist.horizontalHeaderItem(2)
        item.setText(_translate("audio_editor", "Длительность"))
        self.file_menu.setTitle(_translate("audio_editor", "Файл"))
        self.playback_menu.setTitle(_translate("audio_editor", "Воспроизведение"))
        self.speed_menu.setStyleSheet(_translate("audio_editor", "QMenu::item::selected\n"
"{\n"
"background-color: rgb(200, 220, 255);\n"
"color: rgb(0, 0, 0)\n"
"}\n"
""))
        self.speed_menu.setTitle(_translate("audio_editor", "Скорость"))
        self.audio_menu.setTitle(_translate("audio_editor", "Аудио"))
        self.settings_menu.setTitle(_translate("audio_editor", "Настройки"))
        self.editor_menu.setTitle(_translate("audio_editor", "Редактор"))
        self.playlist_menu.setTitle(_translate("audio_editor", "Плейлист"))
        self.open_file_mn.setText(_translate("audio_editor", "Открыть файлы"))
        self.open_folder_mn.setText(_translate("audio_editor", "Открыть папку"))
        self.rewind_forward_mn.setText(_translate("audio_editor", "Перемотка вперёд"))
        self.rewind_back_mn.setText(_translate("audio_editor", "Перемотка назад"))
        self.speed_0_25.setText(_translate("audio_editor", "0.25"))
        self.speed_0_5.setText(_translate("audio_editor", "0.50"))
        self.speed_0_75.setText(_translate("audio_editor", "0.75"))
        self.speed_1.setText(_translate("audio_editor", "1.00"))
        self.speed_1_25.setText(_translate("audio_editor", "1.25"))
        self.speed_1_5.setText(_translate("audio_editor", "1.50"))
        self.speed_1_75.setText(_translate("audio_editor", "1.75"))
        self.speed_2.setText(_translate("audio_editor", "2.00"))
        self.specified_time_mn.setText(_translate("audio_editor", "Переход к указанному времени"))
        self.pause_mn.setText(_translate("audio_editor", "Пауза"))
        self.play_mn.setText(_translate("audio_editor", "Воспроизвести"))
        self.stop_mn.setText(_translate("audio_editor", "Стоп"))
        self.previous_composition_mn.setText(_translate("audio_editor", "Предыдущая композиция"))
        self.next_composition_mn.setText(_translate("audio_editor", "Следующая композиция"))
        self.volume_minus_mn.setText(_translate("audio_editor", "Уменьшить громкость"))
        self.volume_plus_mn.setText(_translate("audio_editor", "Увеличить громкость"))
        self.volume_off_mn.setText(_translate("audio_editor", "Выключить звук"))
        self.action_9.setText(_translate("audio_editor", "Включить звук"))
        self.language_options_mn.setText(_translate("audio_editor", "Язык"))
        self.open_editor_window_mn.setText(_translate("audio_editor", "Открыть редактор"))
        self.repeat_composition_mn.setText(_translate("audio_editor", "Повторить композицию"))
        self.add_file_mn.setText(_translate("audio_editor", "Добавить в плейлист"))
        self.delete_file_mn.setText(_translate("audio_editor", "Удалить из плейлиста"))
        self.clear_playlist_mn.setText(_translate("audio_editor", "Очистить плейлист"))
        self.save_playlist_mn.setText(_translate("audio_editor", "Сохранить плейлист"))
        self.open_playlist_mn.setText(_translate("audio_editor", "Открыть плейлист"))
